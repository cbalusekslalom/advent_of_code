
def list_addition(list1: list, list2: list) -> list:
    return_list = []
    return_list.append(list1)
    return_list.append(list2)
    return return_list


def split_element(input_number: int) -> list:
    if input_number%2 != 0:
        k = int((input_number - 1)/2)
        return [k, k+1]
    else:
        k = int(input_number/2)
        return [k, k]


def is_nested_list(l):
    try:
        next(x for x in l if isinstance(x, list))

    except StopIteration:
        return False

    return True

### Check nested within 4 pairs
## explosion takes left character one to left and adds, takes right character one to right and adds
## e.g. [[[6, [5, 7]], 2], 3] => [[11, 9], 3]
### Any number > 10, creates a split
## e.g. [11, 3] -> [[5,6], 3]

"""

[9,[[[7,1],3],3]]
[[[3,[3,9]],[3,9]],[[[7,4],4],3]]
[[[[1,8],[9,6]],[[1,1],2]],[[[3,1],4],6]]


[                                              ]
[                                      ], [6,6]
 [                             ],[5,5]
  [     5,       0     ],[7,4]
   [   -,   -   ],[-,-]
    
[[[[4, 0],[5,4]],[[7,7],[6,0]]], [[8,[7,7]],[[7,9],[5,0]]]]                   
#### Must do all explosions 1st, then do splits.  If an explosion is generated by split, must explode 1st
[[[[4,0],[5,4]],[[7,7],[6,0]]],[[8,[7,7]],[[7,9],[5,0]]]]
"""